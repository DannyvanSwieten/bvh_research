#version 460

#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require
#extension GL_EXT_scalar_block_layout: require

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

#define FLOAT_MAX 10000

___RAY_STRUCT___

___INTERSECTION_STRUCT___

struct Instance{
    uint64_t blas_address;
    uint instance_id;
    mat4 transform;
};

layout(scalar, set = 0, binding = 0) buffer RayBuffer {
    Ray rays[];
};

layout(scalar, set = 0, binding = 1) readonly buffer IntersectionBuffer {
    Intersection intersections[];
};

layout(scalar, set = 0, binding = 2) readonly buffer AccelerationStructure {
    Instance instances[];
};

layout(scalar, set = 0, binding = 3) readonly uniform FrameSettings {
    ivec2 frame_resolution;
};

Ray shade(Ray ray, uint instance_id, uint primitive_id, float t, vec2 attributes, mat4 transform);

void main()
{
    if(gl_GlobalInvocationID.x < frame_resolution.x && gl_GlobalInvocationID.y < frame_resolution.x)
    {
        uint i = gl_GlobalInvocationID.y * frame_resolution.x + gl_GlobalInvocationID.x;
        Intersection intersection = intersections[i];
        mat4 transform = instances[intersection.instance_id].transform;
        rays[i] = shade(rays[i], intersection.instance_id, intersection.primitive_id, intersection.t, vec2(intersection.u, intersection.v), transform);
    }
}

